<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一些 MV (随缘)</title>
    <url>/2023/11/18/Others/</url>
    <content><![CDATA[<h2> MV </h2>
<span id="more"></span>
<iframe width="427" height="240" src="https://www.youtube-nocookie.com/embed/Mh9E1iZxoHs" title="22/7 9thシングル『曇り空の向こうは晴れている』music video" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br> </br>
<iframe width="427" height="240" src="https://www.youtube-nocookie.com/embed/87IzmBR3v4o" title="22/7 11thシングル『僕は今夜、出て行く』music video" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br> </br>
<iframe width="427" height="240" src="https://www.youtube-nocookie.com/embed/XYKceXnAFpQ" title="スリーズブーケ 「眩耀夜行」 リリックビデオ (ラブライブ！蓮ノ空女学院スクールアイドルクラブ)" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
]]></content>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>搞了N天，终于搞出来了</title>
    <url>/2023/08/24/blog-his/</url>
    <content><![CDATA[<p>其实这东西…<span id="more"></span>(博客)就是我兴致一来搞的，<del>搞出来也就两三天罢了</del>，不过中途碰到了许多奇奇怪怪的问题，总之挺折腾的[em198]</p>
<p>先是 lnmp 环境的搭建（没用云服务端开箱即用的，买不起，用的是 <a href="https://github.com/linuxeye/lnmp">gayhub</a> 上的自动化脚本），然后是 WordPress 的安装、总体的配置等等。最初用的是普通的云服务器安装 lnmp，很快搞掂；但，后来我想安装到在 pdd 花费了不到 50RMB 买的机顶盒，可总是安装失败，以我目前的水平是解决不了的啦[哭笑]<br><del>（目前就随便装了个主题应付一下，有空再搞了</del></p>
<p><strong>2024.02.17更新</strong><br>现在的话就是使用 hexo，部署在 github pages 上了，还套上了<del>减速器</del> cloudflare，方便且成本低。<br>后面的话打算进一步完善主题外观（也可能会更换主题），并加上评论系统。</p>
<p><strong>2024.02.20更新</strong><br>经过了这几天的折腾，终于还是换了 butterfly 主题，并开启了评论系统（Waline &amp; Twikoo, 使用了 vercel or netlify + mongodb 的部署方案）。<br>但由于 Turnsite 在两个评论系统中同时启用会出 bug, 目前关闭了 Twikoo，只开启了 Waline。<br>原来的 landscape 主题实在是无能力折腾，遂弃之[死鱼眼]。</p>
<h3 id="文档-参考"><a href="#文档-参考" class="headerlink" title="文档 &amp; 参考:"></a>文档 &amp; 参考:</h3><ul>
<li><a href="https://waline.js.org/">https://waline.js.org/</a></li>
<li><a href="https://github.com/jerryc127/hexo-theme-butterfly/issues/1418">https://github.com/jerryc127/hexo-theme-butterfly/issues/1418</a></li>
<li><a href="https://twikoo.js.org/">https://twikoo.js.org/</a></li>
<li><a href="https://blog.saop.cc/">https://blog.saop.cc/</a></li>
<li><a href="https://runtimes.cc/8693/">https://runtimes.cc/8693/</a><br><br> </br></li>
<li><em>发布时间: 2023.08.24, 最后更新: 2024.02.20</em></li>
</ul>
]]></content>
      <tags>
        <tag>old</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 使用笔记</title>
    <url>/2024/02/15/git-notes/</url>
    <content><![CDATA[<p>一些关于 Git 的使用笔记</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文档&amp;教程</span></span><br><span class="line"><span class="comment"># https://git-scm.com/</span></span><br><span class="line"><span class="comment"># https://github.com/</span></span><br><span class="line"><span class="comment"># https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository</span></span><br><span class="line"><span class="comment"># https://www.runoob.com/git/git-tutorial.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github cli 使用</span></span><br><span class="line"><span class="comment"># https://cli.github.com/manual/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 gh 登陆</span></span><br><span class="line">gh auth login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新仓库,并推送至远程地址</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# your repo name&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/your-github-account-name/your-new-repo.git</span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已有 repo</span></span><br><span class="line">git remote add origin https://github.com/your-github-account-name/your-new-repo.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在已有仓库创建新 branch</span></span><br><span class="line">git checkout -b newBranch</span><br><span class="line">git add *</span><br><span class="line">git commit -m <span class="string">&quot;init commit&quot;</span></span><br><span class="line">git push origin newBranch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已有分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换代码版本</span></span><br><span class="line">git checkout <span class="string">&quot;可以是tag、branch,也可以是当前分支下的 commit sha&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看未提交的代码与原代码的差异</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin -d remote_branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 修改 commit</span></span><br><span class="line"><span class="comment"># https://segmentfault.com/a/1190000041122415</span></span><br><span class="line"><span class="comment"># https://juejin.cn/post/6844903806224826375</span></span><br><span class="line">git rebase -i <span class="string">&quot;你需要修改的 commit 的前一个 commit&quot;</span> (接着会跳出编辑器页面，把需要修改的 commit 的 <span class="string">&quot;pick&quot;</span> 改成 <span class="string">&quot;edit&quot;</span>)</span><br><span class="line">git commit --amend (还可以附带参数，如：--author=<span class="string">&quot;Author Name &lt;email@address.com&gt;&quot;</span>)</span><br><span class="line"><span class="comment"># 如果你已经修改了 git config 中的用户名和邮箱，也可以使用：git commit --amend --reset-author --no-edit</span></span><br><span class="line">git rebase --<span class="built_in">continue</span> (移动到下个 commit 作为基准)</span><br><span class="line">git push -f</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 使用笔记(还有唠嗑)</title>
    <url>/2024/01/29/linux-notes/</url>
    <content><![CDATA[<h2 id="Linux-系统初使用"><a href="#Linux-系统初使用" class="headerlink" title="Linux 系统初使用?"></a>Linux 系统初使用?</h2><p>说来话长了。。。<span id="more"></span>本人小时候家里没有电脑，平时也基本接触不到电脑。在21年的时候，估计是贴吧逛多了，然后按捺不住，想要拥有一台自己的电脑<del>玩些奇奇怪怪的东西</del>，于是偷偷地省父母给的饭钱，在 <code>keng duo duo</code> 买了一堆硬件回来组装电脑。接着，用手机、自己拆充电线焊接的 OTG 转接器、还有内存卡做了个系统盘，装机。显示器用的还是楼下捡的 VGA 监视器……</p>
<p>开始只是<del>浅浅地</del>看些番玩些 Gal 罢了，但是后来因为沉迷了某部偶像番， 也慢慢地(大概?)接触到了字幕圈还有压制圈，认识了许多的大佬，学到了许多的知识，<del>不过似乎还学了一些好像无关紧要的知识</del>。不过也似乎是因为过于沉迷这些新奇的事物，而且还把这些东西当作了逃避现实世界的避风港，搞得整个高中的学业都没搞好，人际关系也是一团糟，身体素质也差了不少。</p>
<p>之后因为一些奇奇怪怪的缘由(已经记不清楚了，大概是建站?)，开始用起了 Linux 系统。开始先是用个机顶盒刷了 Armbian，然后又去买了些竞价实例的云服务器玩玩，再后来到实体机安装，发现 Linux 系统还挺省内存的，软件也好编译和开优化，性能也比 Windows 好点<del>(大概是因为内存不够用又不想额外花钱)</del>。</p>
<p>最近这段时间先是用了 Ubuntu，但发现坑太多，于是听从大佬的建议，上了基于 ArchLinux 的 Manjaro，确实舒服不少。好了不说了，接下来就是一些<del>从杂七杂八的地方搜罗来的</del>笔记了。</p>
<h3 id="Ubuntu-使用笔记"><a href="#Ubuntu-使用笔记" class="headerlink" title="Ubuntu 使用笔记"></a><em><strong>Ubuntu 使用笔记</strong></em></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm 包转换为 deb 包以及 deb 包的安装</span></span><br><span class="line">sudo alien x.rpm</span><br><span class="line">sudo dpkg -i x.deb</span><br><span class="line"></span><br><span class="line"><span class="comment"># GCC 编译器版本切换 (Ubuntu 22.04)</span></span><br><span class="line">sudo apt install gcc-11 gcc-11-multilib g++-11 g++-11-multilib gcc-12 gcc-12-multilib g++-12 g++-12-multilib ......</span><br><span class="line"></span><br><span class="line"><span class="comment"># --slave能保证gcc和g++保持相同的版本</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 90 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12</span><br><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 80 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11</span><br><span class="line">sudo update-alternatives --config gcc</span><br><span class="line"></span><br><span class="line"><span class="comment"># python 不同版本的安装与配置</span></span><br><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install python3.11</span><br><span class="line"></span><br><span class="line"><span class="comment"># python 的编译与安装</span></span><br><span class="line">apt install build-essential zlib1g-dev libncurses5-dev libncursesw5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libbz2-dev liblzma-dev sqlite3 libsqlite3-dev tk-dev uuid-dev libgdbm-compat-dev libgdbm-dev libc6-dev</span><br><span class="line">wget https://www.python.org/ftp/python/3.11.5/Python-3.11.5.tar.xz</span><br><span class="line">tar xf Python-3.11.5.tar.xz</span><br><span class="line">./configure --enable-optimizations --with-lto --prefix=/home/ubuntu/myenc ...略</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make altinstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 apt-cache rdepends 找到应用依赖项</span></span><br><span class="line">apt-cache rdepends python3.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同上 (非常不建议使用，系统容易炸)</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 10</span><br><span class="line">sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.11 20</span><br><span class="line">sudo update-alternatives --config python3</span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/local/bin/python3.11 /usr/bin/python3.11</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若碰到 No module named &#x27;apt_pkg&#x27; 的问题，如果apt_pkg.so已存在，则使用 ln -fs xxx (不过系统其他地方还会抽风)</span></span><br><span class="line"><span class="comment"># 其他方法 https://blog.csdn.net/StillOnMyWay/article/details/114492675</span></span><br><span class="line"><span class="built_in">cd</span> /usr/lib/python3/dist-packages/</span><br><span class="line"><span class="built_in">ln</span> -s apt_pkg.cpython-310-x86_64-linux-gnu.so apt_pkg.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装不同pip</span></span><br><span class="line">curl -L https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python<span class="comment">#.## get-pip.py</span></span><br><span class="line">pip<span class="comment">#.## -V 或 python#.## -m pip -V</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># vapoursynth 编译与安装</span></span><br><span class="line"><span class="comment"># 参照 .github/workflows/*.yml</span></span><br><span class="line"><span class="comment"># 首先安装编译依赖项</span></span><br><span class="line">  sudo apt install autoconf automake libtool pkg-config cmake nasm ninja-build</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 如果想安装更高版本的nasm：</span></span><br><span class="line">  wget https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/linux/nasm-2.16.01-0.fc36.x86_64.rpm</span><br><span class="line">  sudo alien nasm-2.16.01-0.fc36.x86_64.rpm &amp;&amp; sudo dpkg -i nasm*.deb</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 编译安装 zimg</span></span><br><span class="line">  git <span class="built_in">clone</span> https://github.com/sekrit-twc/zimg --depth 1 --shallow-submodules --recurse-submodules</span><br><span class="line">  <span class="built_in">pushd</span> zimg</span><br><span class="line">  ./autogen.sh</span><br><span class="line">  ./configure --prefix=/usr</span><br><span class="line">  make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">  sudo make install -j$(<span class="built_in">nproc</span>)</span><br><span class="line">  <span class="built_in">popd</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 编译安装vapoursynth</span></span><br><span class="line">  python3 -m pip install -U pip</span><br><span class="line">  pip3 install -U cython setuptools wheel</span><br><span class="line">  git <span class="built_in">clone</span> https://github.com/vapoursynth/vapoursynth</span><br><span class="line">  <span class="built_in">cd</span> vapoursynth</span><br><span class="line">  ./autogen.sh</span><br><span class="line">  ./configure --prefix=/usr</span><br><span class="line">  make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">  sudo make install</span><br><span class="line">  python setup.py sdist -d sdist</span><br><span class="line">  <span class="built_in">mkdir</span> empty</span><br><span class="line">  <span class="built_in">pushd</span> empty</span><br><span class="line">  pip install vapoursynth --no-index --find-links ../sdist</span><br><span class="line">  <span class="built_in">popd</span></span><br><span class="line">  python -m unittest discover -s <span class="built_in">test</span> -p <span class="string">&quot;*test.py&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 查询依赖库</span></span><br><span class="line">ldd xxx.so</span><br></pre></td></tr></table></figure>

<h3 id="Manjaro-使用笔记"><a href="#Manjaro-使用笔记" class="headerlink" title="Manjaro 使用笔记"></a><em><strong>Manjaro 使用笔记</strong></em></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 时间配置</span></span><br><span class="line">sudo timedatectl set-local-rtc 1</span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line">sudo hwclock --localtime --systohc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理</span></span><br><span class="line">sudo pacman-mirrors -c China</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://mirrors.ustc.edu.cn/help/archlinuxcn.html</span></span><br><span class="line"><span class="comment"># 在 /etc/pacman.conf 文件末尾添加两行：</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line"><span class="comment"># 接着执行</span></span><br><span class="line">sudo pacman -Syyu</span><br><span class="line">sudo pacman-key --lsign-key <span class="string">&quot;farseerfc@archlinux.org&quot;</span></span><br><span class="line">sudo pacman -S archlinuxcn-keyring</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新生成 grub 引导 (如果系统语言已经改成中文的话，引导界面也会改成中文)</span></span><br><span class="line">sudo grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字体</span></span><br><span class="line">sudo pacman -S noto-fonts-cjk noto-fonts-extra</span><br></pre></td></tr></table></figure>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他?"></a><em><strong>其他?</strong></em></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Rust mirror</span></span><br><span class="line"><span class="comment"># https://mirrors.ustc.edu.cn/help/crates.io-index.html</span></span><br><span class="line"><span class="comment"># 在 $CARGO_HOME/config 中添加如下内容 ($CARGO_HOME 在 Windows 系统默认为：%USERPROFILE%\.cargo，在类 Unix 系统默认为：$HOME/.cargo)：</span></span><br><span class="line">[source.crates-io]</span><br><span class="line">replace-with = <span class="string">&#x27;ustc&#x27;</span></span><br><span class="line"></span><br><span class="line">[source.ustc]</span><br><span class="line">registry = <span class="string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pip mirror</span></span><br><span class="line">python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install NGINX Latest Version</span></span><br><span class="line"><span class="comment"># https://nginx.org/en/linux_packages.html</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>给博客添加 APlayer 播放器</title>
    <url>/2024/02/04/use-player/</url>
    <content><![CDATA[<p>博客一眼看过去，感觉还是单调了些，于是就有了在博客里添加播放器的冲动<span id="more"></span>（虽然加播放器也改变不了多少）。</p>
<p>看了下 <a href="https://aplayer.js.org/#/zh-Hans/">APlayer的文档</a>，发现似乎还是可行的，然后就动手改了，顺便上了 pjax 来避免切换页面导致音乐播放停止。</p>
<p>我是直接在主题文件（hexo-theme-landscape）里改的，但有缺点：如果要在其他设备写博客或修改博客，都要用到被修改的主题文件；改 js 有点麻烦。所以可能还是直接装插件更好些。大致修改如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在 hexo-theme-landscape/layout/_partial/head.ejs 引入 APlayer.min.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* from blog.saop.cc/p/8dc9/#全局吸底伸缩 */</span></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">960px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>:-<span class="number">66px</span><span class="meta">!important</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>:<span class="number">0</span><span class="meta">!important</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件 hexo-theme-landscape/layout/layout.ejs --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- layout.ejs 原主体部分 --&gt;</span></span><br><span class="line">&lt;%- partial(&#x27;_partial/head&#x27;) %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      &lt;%- partial(&#x27;_partial/header&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span>&lt;%- body %&gt;<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        &lt;% if (theme.sidebar &amp;&amp; theme.sidebar !== &#x27;bottom&#x27;)&#123; %&gt;</span><br><span class="line">          &lt;%- partial(&#x27;_partial/sidebar&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      &lt;%- partial(&#x27;_partial/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;%- partial(&#x27;_partial/mobile-nav&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">    &lt;%- partial(&#x27;_partial/after-footer&#x27;) %&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用 PJAX 避免播放中断 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery-pjax@2.0.1/jquery.pjax.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">$(<span class="variable language_">document</span>).<span class="title function_">pjax</span>(<span class="string">&#x27;a[target!=_blank]&#x27;</span>, <span class="string">&#x27;#container&#x27;</span>, &#123;<span class="attr">timeout</span>:<span class="number">3000</span>, <span class="attr">fragment</span>:<span class="string">&#x27;#container&#x27;</span>&#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加 APlayer.min.js 以及播放列表，或者可以在 hexo-theme-landscape/source 内添加 js 播放列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aplayerallpages&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> apall = <span class="keyword">new</span> <span class="title class_">APlayer</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;aplayerallpages&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">fixed</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">autoplay</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">loop</span>: <span class="string">&#x27;all&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">order</span>: <span class="string">&#x27;list&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">preload</span>: <span class="string">&#x27;metadata&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">volume</span>: <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">mutex</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">listFolded</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">audio</span>: [</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;01&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">artist</span>: <span class="string">&#x27;a1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&#x27;01.flac&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">theme</span>: <span class="string">&#x27;#9F604C&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;02&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">artist</span>: <span class="string">&#x27;a2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&#x27;02.flac&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">theme</span>: <span class="string">&#x27;#9F604C&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>2024.02.20更新</strong><br>现在的话使用了 butterfly 主题，直接在主题的配置文件修改就行，<a href="https://butterfly.js.org/posts/507c070f/">详情见文档</a></p>
]]></content>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>npm 使用笔记</title>
    <url>/2024/03/02/npm/</url>
    <content><![CDATA[<p>一些关于 npm 的使用笔记</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文档&amp;教程</span></span><br><span class="line"><span class="comment"># https://docs.npmjs.com/</span></span><br><span class="line"><span class="comment"># https://www.runoob.com/nodejs/nodejs-npm.html</span></span><br><span class="line"><span class="comment"># https://akilar.top/posts/3e956346/</span></span><br><span class="line"></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br><span class="line"></span><br><span class="line">npm init</span><br><span class="line">npm publish</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除已发布的包版本</span></span><br><span class="line">npm unpublish you-npm-pack@version --force</span><br></pre></td></tr></table></figure>

<ul>
<li>一些 npm 镜像：<br><a href="https://cdn.jsdelivr.net/npm">https://cdn.jsdelivr.net/npm</a><br><a href="https://unpkg.com/">https://unpkg.com/</a><br><a href="https://npm.elemecdn.com/">https://npm.elemecdn.com/</a><br><a href="https://registry.npmmirror.com/">https://registry.npmmirror.com/</a></li>
</ul>
]]></content>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
</search>
